import * as React from 'react';
import { BaseProps, SharedProps } from '../types/general.cjs';

type IconButtonProps<T extends React.ElementType = "button"> = BaseProps<T, {
    ripple?: boolean;
    isCircular?: boolean;
} & Omit<SharedProps, "size"> & {
    size?: SharedProps["size"] | "xs" | "xl";
}>;
declare const IconButton: <T extends React.ElementType<any, keyof React.JSX.IntrinsicElements> = "button">(props: {
    ripple?: boolean | undefined;
    isCircular?: boolean | undefined;
} & Omit<SharedProps, "size"> & {
    size?: SharedProps["size"] | "xs" | "xl";
} & {
    as?: T | undefined;
} & Omit<React.PropsWithoutRef<React.ComponentProps<T>>, "as" | "variant" | "color" | "size" | "ripple" | "isCircular"> & {
    ref?: React.Ref<Element> | undefined;
}) => JSX.Element;

export { IconButton, IconButtonProps, IconButton as default };
